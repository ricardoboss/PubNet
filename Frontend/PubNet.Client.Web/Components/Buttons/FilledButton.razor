<button disabled="@Disabled" type="@Type" class="@ClassName" @onclick="OnClick">
	@ChildContent
</button>

@code {

	[Parameter]
	public EventCallback<MouseEventArgs> Clicked { get; set; }

	[Parameter]
	public RenderFragment? ChildContent { get; set; }

	[Parameter]
	public bool Disabled { get; set; }

	[Parameter]
	public bool Submit { get; set; }

	[Parameter]
	public ButtonVariant Variant { get; set; } = ButtonVariant.Default;

	private string? Type => Submit ? "submit" : null;

	private string? ClassName => Variant switch
	{
		ButtonVariant.Danger => "danger",
		ButtonVariant.Passive => "passive",
		_ => null,
	};

	private async Task OnClick(MouseEventArgs e) => await Clicked.InvokeAsync(e);

}
