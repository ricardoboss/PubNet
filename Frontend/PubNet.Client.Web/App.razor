@using NavigationContext = Microsoft.AspNetCore.Components.Routing.NavigationContext

@inject AuthenticationStateProvider AuthStateProvider
@inject IOnboardingService OnboardingService
@inject NavigationManager NavigationManager
@inject ILogger<App> Logger

@code {

	private bool isLoading = true;
	private Exception? loadException;
	private bool isSetupComplete;

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		await base.OnAfterRenderAsync(firstRender);

		if (!firstRender)
			return;

		try
		{
			isSetupComplete = await OnboardingService.IsSetupCompleteAsync();
		}
		catch (Exception ex)
		{
			loadException = ex;
		}
		finally
		{
			isLoading = false;

			StateHasChanged();
		}
	}

	private async Task OnNavigateAsync(NavigationContext context)
	{
		if (isLoading || isSetupComplete)
			return;

		var authState = await AuthStateProvider.GetAuthenticationStateAsync();
		if (authState.User.Identity is { IsAuthenticated: true })
		{
			if (!context.Path.StartsWith("Admin/Setup"))
			{
				Logger.LogDebug("Redirecting to setup because it is not complete");

				NavigationManager.NavigateTo("/Admin/Setup");
			}
		}
		else
		{
			if (!context.Path.StartsWith("Admin/Onboarding"))
			{
				Logger.LogDebug("Redirecting to onboarding because setup is not complete and user is not authenticated");

				NavigationManager.NavigateTo("/Admin/Onboarding");
			}
		}
	}

}

<!-- TODO(rbo): migrate back to services.AddCascadingAuthenticationState() in .NET 9 or when dotnet/aspnetcore#57288 is merged -->
<LayoutView Layout="@typeof(MainLayout)">
	@if (isLoading)
	{
		<div id="loader">
			<video width="100" height="100" autoplay loop muted>
				<source src="assets/logo-bounce.100x100.webm" type="video/webm">
			</video>
		</div>
	}
	else
	{
		if (loadException != null)
		{
			<LayoutView Layout="@typeof(FallbackLayout)">
				<PageTitle>PubNet Load Error</PageTitle>

				<MudStack Spacing="3">
					<MudAlert Severity="Severity.Error" Variant="Variant.Outlined">
						<strong>PubNet failed to load</strong><br/>

						Things to check:
						<ul style="list-style: disc; margin-left: 2em;">
							<li>Are you connected to the internet?</li>
							<li>Is the API running?</li>
							<li>Is the API reachable from this machine? (Ports)</li>
						</ul>
					</MudAlert>

					<ExceptionDetails Exception="@loadException"/>
				</MudStack>
			</LayoutView>
		}
		else
		{
			<CascadingAuthenticationState>
				<Router AppAssembly="@typeof(App).Assembly" OnNavigateAsync="@OnNavigateAsync">
					<Found Context="routeData">
						<AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(PageLayout)">
							<NotAuthorized>
								<RedirectToPage Page="/Login"/>
							</NotAuthorized>
						</AuthorizeRouteView>
					</Found>
					<NotFound>
						<PageTitle>Not found</PageTitle>

						<LayoutView Layout="@typeof(PageLayout)">
							<p role="alert">Sorry, there's nothing at this address.</p>
						</LayoutView>
					</NotFound>
				</Router>
			</CascadingAuthenticationState>
		}
	}
</LayoutView>
