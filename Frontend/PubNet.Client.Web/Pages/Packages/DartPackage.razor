@page "/dart/{Name}"
@page "/dart/{Name}/version/{Version}"

@inject IDartPackagesService DartPackagesService

@code {

	[Parameter, EditorRequired]
	public required string Name { get; set; }

	[Parameter]
	public string? Version { get; set; }

	private DartPackageDto? package;
	private DartPackageVersionDto? packageVersion;
	private DartPackageVersionAnalysisDto? analysis;

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();

		await LoadPackage(default);
	}

	private async Task LoadPackage(CancellationToken cancellationToken)
	{
		try
		{
			package = await DartPackagesService.GetPackageAsync(Name, cancellationToken);

			if (package is not null)
				packageVersion = await DartPackagesService.GetPackageVersionAsync(Name, Version, cancellationToken);
		}
		finally
		{
			StateHasChanged();
		}

		if (packageVersion is null)
			return;

		try
		{
			analysis = await DartPackagesService.GetPackageVersionAnalysisAsync(Name, packageVersion.Version!, cancellationToken);
		}
		finally
		{
			StateHasChanged();
		}
	}

}

@if (package is null || packageVersion is null)
{
	<MudProgressCircular Indeterminate/>
}
else
{
	<MudText Typo="Typo.h3">@package.Name @packageVersion.Version</MudText>

	<MudText Typo="Typo.subtitle1">
		created by <MudLink Href="@($"/author/{package.Author}")">@package.Author</MudLink>
		at <em>@packageVersion.PublishedAt</em>
	</MudText>

	<MudStack Row Spacing="5" Class="mt-3">
		<MudStack Spacing="5" Class="flex-grow-1">
			<!-- Badges -->

			<MudTabs Rounded HideSlider PanelClass="mt-5 rounded overflow-x-auto">
				<MudTabPanel Text="README">
					@if (analysis?.ReadmeText is not null)
					{
						<Markdown Content="@analysis.ReadmeText"/>
					}
					else if (analysis is not null)
					{
						<MudText Typo="Typo.body1">No README found</MudText>
					}
					else
					{
						<MudText Typo="Typo.body1">Analysis not completed yet.</MudText>
					}
				</MudTabPanel>
			</MudTabs>
		</MudStack>

		<MudStack Justify="Justify.FlexStart" AlignItems="AlignItems.Stretch" StretchItems="StretchItems.None">
			<MudText Typo="Typo.h5">Points</MudText>

			<MudDivider Class="flex-grow-0"/>

			<MudText Typo="Typo.h5">Description</MudText>

			<MudDivider Class="flex-grow-0"/>

			<MudText Typo="Typo.h5">Dependencies</MudText>

			<MudDivider Class="flex-grow-0"/>

			<MudText Typo="Typo.h5">License</MudText>

			<MudDivider Class="flex-grow-0"/>

			<MudText Typo="Typo.h5">Dependents</MudText>

		</MudStack>
	</MudStack>
}
