@inject AuthenticationService Auth

<Bar Breakpoint="Breakpoint.Mobile" Shadow="Shadow.Small" >
    <BarBrand>
        <BarItem>
            <BarLink To="/">
                <strong>PubNet</strong>
            </BarLink>
        </BarItem>
        <BarToggler />
    </BarBrand>
    <BarMenu>
        <BarStart>
            <BarItem>
                <BarLink To="/browse/packages">
                    <BarIcon IconName="IconName.List" Margin="Margin.Is2.FromEnd"/>
                    Packages
                </BarLink>
            </BarItem>
            <BarItem>
                <BarLink To="/browse/authors">
                    <BarIcon IconName="IconName.Users" Margin="Margin.Is2.FromEnd"/>
                    Authors
                </BarLink>
            </BarItem>
        </BarStart>
        <BarEnd Margin="Margin.Is2.FromEnd">
            <BarItem Flex="Flex.AlignItems.Center">
                @switch (Authenticated)
                {
                    case true:
                        <BarDropdown>
                            <BarDropdownToggle>
                                @UserName
                            </BarDropdownToggle>
                            <BarDropdownMenu>
                                <BarDropdownItem To="@("/authors/" + UserName)">
                                    <BarIcon IconName="IconName.UserCircle" Margin="Margin.Is2.FromEnd"/>
                                    Profile
                                </BarDropdownItem>
                                <BarDropdownDivider/>
                                <BarDropdownItem To="/logout">
                                    Logout
                                </BarDropdownItem>
                            </BarDropdownMenu>
                        </BarDropdown>
                        break;
                    case false:
                        <Button Type="@ButtonType.Link" To="/authenticate" Color="Color.Primary" Outline>Authenticate</Button>
                        break;
                    default:
                        <em>Please wait...</em>
                        break;
                }
            </BarItem>
        </BarEnd>
    </BarMenu>
</Bar>

@code {

    private bool? Authenticated { get; set; }

    private string? UserName { get; set; }

    /// <inheritdoc />
    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        UserName = null;
        Authenticated = await Auth.IsAuthenticatedAsync();
        if (Authenticated == true)
            UserName = (await Auth.GetSelfAsync()).UserName;
    }

}
