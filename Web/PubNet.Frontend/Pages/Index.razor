@page "/"
@inject ApiClient Http

<PageTitle>PubNet</PageTitle>

@if (MessageBoxContent is not null)
{
	<Alert Color="Color.Info" Dismisable Visible>
		@MessageBoxContent
	</Alert>
}

<Jumbotron Background="Background.Light">
	<JumbotronTitle Size="JumbotronTitleSize.Is4">
		Welcome to PubNet!
	</JumbotronTitle>
	<Divider />
	<JumbotronSubtitle>
		Private dart package hosting.
	</JumbotronSubtitle>
</Jumbotron>

<Heading Size="HeadingSize.Is2" Margin="Margin.Is4.FromTop">What to do</Heading>

<UnorderedList>
	<UnorderedListItem>Browse available packages: <NavLink href="/browse/packages">Browse Packages</NavLink></UnorderedListItem>
	<UnorderedListItem>Look for authors who already uploaded packages: <NavLink href="/browse/authors">Browse Authors</NavLink></UnorderedListItem>
</UnorderedList>

<Heading Size="HeadingSize.Is2" Margin="Margin.Is4.FromTop">How to upload packages</Heading>

<OrderedList>
	<OnlyGuest>
		<OrderedListItem>
			<NavLink href="/authenticate">Register/log in</NavLink> to obtain your personal OAuth token
		</OrderedListItem>
	</OnlyGuest>
	<OnlyAuthenticated>
		<OrderedListItem>
			Add a <ClickToCopyCode TextContent="PUBNET_TOKEN" /> environment variable with the following value:

			<ClickToCopyCode Masked TextContent="@Token" />
		</OrderedListItem>
	</OnlyAuthenticated>
	<OrderedListItem>
		Run <ClickToCopyCode TextContent="@PubAddTokenText" />
	</OrderedListItem>
	<OrderedListItem>
		Add
		<ClickToCopyCode TextContent="@($"publish_to: {PublishToUrl}")" />
		to your <Code>pubspec.yaml</Code>
	</OrderedListItem>
	<OrderedListItem>
		Run <ClickToCopyCode TextContent="dart pub publish" />
	</OrderedListItem>
</OrderedList>

@code {

	[Parameter]
	[SupplyParameterFromQuery(Name = "message")]
	public string? Message { get; set; }

	private string? MessageBoxContent => Message switch {
		"welcome-back" => "Login successful. Welcome back!",
		"logged-out" => "Logout successful. cya!",
		"package-deleted" => "The package has been deleted successfully.",
		_ => null,
	};

	private string PublishToUrl
	{
		get
		{
			var address = Http.BaseAddress ?? "";

			address = address.TrimEnd('/');

			if (address.EndsWith("/api"))
				address = address[..^4];

			return address;
		}
	}

	private string Token => Http.Token ?? "";

	private string PubAddTokenText => $"dart pub token add {PublishToUrl} --env-var PUBNET_TOKEN";
}
